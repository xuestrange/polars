(function() {var type_impls = {
"polars":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_new</a>(\n    data_type: <a class=\"enum\" href=\"polars/datatypes/enum.ArrowDataType.html\" title=\"enum polars::datatypes::ArrowDataType\">ArrowDataType</a>,\n    values: Buffer&lt;T&gt;,\n    validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bitmap&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PrimitiveArray&lt;T&gt;, <a class=\"enum\" href=\"polars/error/enum.PolarsError.html\" title=\"enum polars::error::PolarsError\">PolarsError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>The canonical method to create a [<code>PrimitiveArray</code>] out of its internal components.</p>\n<h5 id=\"implementation\"><a href=\"#implementation\">Implementation</a></h5>\n<p>This function is <code>O(1)</code>.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<p>This function errors iff:</p>\n<ul>\n<li>The validity is not <code>None</code> and its length is different from <code>values</code>’s length</li>\n<li>The <code>data_type</code>’s [<code>PhysicalType</code>] is not equal to [<code>PhysicalType::Primitive(T::PRIMITIVE)</code>]</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to</a>(self, data_type: <a class=\"enum\" href=\"polars/datatypes/enum.ArrowDataType.html\" title=\"enum polars::datatypes::ArrowDataType\">ArrowDataType</a>) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a new [<code>PrimitiveArray</code>] with a different logical type.</p>\n<p>This function is useful to assign a different <a href=\"polars/datatypes/enum.ArrowDataType.html\" title=\"enum polars::datatypes::ArrowDataType\"><code>ArrowDataType</code></a> to the array.\nUsed to change the arrays’ logical type (see example).</p>\n<h5 id=\"example\"><a href=\"#example\">Example</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>polars_arrow::array::Int32Array;\n<span class=\"kw\">use </span>polars_arrow::datatypes::ArrowDataType;\n\n<span class=\"kw\">let </span>array = Int32Array::from(<span class=\"kw-2\">&amp;</span>[<span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>), <span class=\"prelude-val\">None</span>, <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>)]).to(ArrowDataType::Date32);\n<span class=\"macro\">assert_eq!</span>(\n   <span class=\"macro\">format!</span>(<span class=\"string\">&quot;{:?}&quot;</span>, array),\n   <span class=\"string\">&quot;Date32[1970-01-02, None, 1970-01-03]&quot;\n</span>);</code></pre></div>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>Panics iff the <code>data_type</code>’s [<code>PhysicalType</code>] is not equal to [<code>PhysicalType::Primitive(T::PRIMITIVE)</code>]</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_vec\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_vec</a>(values: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a (non-null) [<code>PrimitiveArray</code>] from a vector of values.\nThis function is <code>O(1)</code>.</p>\n<h5 id=\"examples\"><a href=\"#examples\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>polars_arrow::array::PrimitiveArray;\n\n<span class=\"kw\">let </span>array = PrimitiveArray::from_vec(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);\n<span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">&quot;{:?}&quot;</span>, array), <span class=\"string\">&quot;Int32[1, 2, 3]&quot;</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>(&amp;self) -&gt; ZipValidity&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'_, T&gt;, BitmapIter&lt;'_&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"ZipValidity&lt;&amp;T, Iter&lt;&#39;_, T&gt;, BitmapIter&lt;&#39;_&gt;&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns an iterator over the values and validity, <code>Option&lt;&amp;T&gt;</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.values_iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">values_iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'_, T&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;&#39;_, T&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns an iterator of the values, <code>&amp;T</code>, ignoring the arrays’ validity.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the length of this array</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">values</a>(&amp;self) -&gt; &amp;Buffer&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>The values [<code>Buffer</code>].\nValues on null slots are undetermined (they can be anything).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validity\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">validity</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;Bitmap&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the optional validity.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.data_type\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">data_type</a>(&amp;self) -&gt; &amp;<a class=\"enum\" href=\"polars/datatypes/enum.ArrowDataType.html\" title=\"enum polars::datatypes::ArrowDataType\">ArrowDataType</a></h4></section></summary><div class=\"docblock\"><p>Returns the arrays’ <a href=\"polars/datatypes/enum.ArrowDataType.html\" title=\"enum polars::datatypes::ArrowDataType\"><code>ArrowDataType</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.value\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">value</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the value at slot <code>i</code>.</p>\n<p>Equivalent to <code>self.values()[i]</code>. The value of a null slot is undetermined (it can be anything).</p>\n<h5 id=\"panic\"><a href=\"#panic\">Panic</a></h5>\n<p>This function panics iff <code>i &gt;= self.len</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.value_unchecked\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a class=\"fn\">value_unchecked</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the value at index <code>i</code>.\nThe value on null slots is undetermined (it can be anything).</p>\n<h5 id=\"safety\"><a href=\"#safety\">Safety</a></h5>\n<p>Caller must be sure that <code>i &lt; self.len()</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the element at index <code>i</code> or <code>None</code> if it is null</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>iff <code>i &gt;= self.len()</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">slice</a>(&amp;mut self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Slices this [<code>PrimitiveArray</code>] by an offset and length.</p>\n<h5 id=\"implementation-1\"><a href=\"#implementation-1\">Implementation</a></h5>\n<p>This operation is <code>O(1)</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_unchecked\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a class=\"fn\">slice_unchecked</a>(&amp;mut self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Slices this [<code>PrimitiveArray</code>] by an offset and length.</p>\n<h5 id=\"implementation-2\"><a href=\"#implementation-2\">Implementation</a></h5>\n<p>This operation is <code>O(1)</code>.</p>\n<h5 id=\"safety-1\"><a href=\"#safety-1\">Safety</a></h5>\n<p>The caller must ensure that <code>offset + length &lt;= self.len()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sliced\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">sliced</a>(self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this array sliced.</p>\n<h5 id=\"implementation-3\"><a href=\"#implementation-3\">Implementation</a></h5>\n<p>This function is <code>O(1)</code>.</p>\n<h5 id=\"panics-2\"><a href=\"#panics-2\">Panics</a></h5>\n<p>iff <code>offset + length &gt; self.len()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sliced_unchecked\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a class=\"fn\">sliced_unchecked</a>(\n    self,\n    offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>\n) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this array sliced.</p>\n<h5 id=\"implementation-4\"><a href=\"#implementation-4\">Implementation</a></h5>\n<p>This function is <code>O(1)</code>.</p>\n<h5 id=\"safety-2\"><a href=\"#safety-2\">Safety</a></h5>\n<p>The caller must ensure that <code>offset + length &lt;= self.len()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_validity\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">with_validity</a>(self, validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bitmap&gt;) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this array with a new validity.</p>\n<h5 id=\"panic-1\"><a href=\"#panic-1\">Panic</a></h5>\n<p>Panics iff <code>validity.len() != self.len()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_validity\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_validity</a>(&amp;mut self, validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bitmap&gt;)</h4></section></summary><div class=\"docblock\"><p>Sets the validity of this array.</p>\n<h5 id=\"panics-3\"><a href=\"#panics-3\">Panics</a></h5>\n<p>This function panics iff <code>values.len() != self.len()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.boxed\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">boxed</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn Array&gt;</h4></section></summary><div class=\"docblock\"><p>Boxes this array into a <a href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\"><code>Box&lt;dyn Array&gt;</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arced\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">arced</a>(self) -&gt; <a class=\"struct\" href=\"polars/prelude/struct.Arc.html\" title=\"struct polars::prelude::Arc\">Arc</a>&lt;dyn Array&gt;</h4></section></summary><div class=\"docblock\"><p>Arcs this array into a <a href=\"polars/prelude/struct.Arc.html\" title=\"struct polars::prelude::Arc\"><code>std::sync::Arc&lt;dyn Array&gt;</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">with_values</a>(self, values: Buffer&lt;T&gt;) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this [<code>PrimitiveArray</code>] with new values.</p>\n<h5 id=\"panics-4\"><a href=\"#panics-4\">Panics</a></h5>\n<p>This function panics iff <code>values.len() != self.len()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_values</a>(&amp;mut self, values: Buffer&lt;T&gt;)</h4></section></summary><div class=\"docblock\"><p>Update the values of this [<code>PrimitiveArray</code>].</p>\n<h5 id=\"panics-5\"><a href=\"#panics-5\">Panics</a></h5>\n<p>This function panics iff <code>values.len() != self.len()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply_validity\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">apply_validity</a>&lt;F&gt;(&amp;mut self, f: F)<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Bitmap) -&gt; Bitmap,</span></h4></section></summary><div class=\"docblock\"><p>Applies a function <code>f</code> to the validity of this array.</p>\n<p>This is an API to leverage clone-on-write</p>\n<h5 id=\"panics-6\"><a href=\"#panics-6\">Panics</a></h5>\n<p>This function panics if the function <code>f</code> modifies the length of the [<code>Bitmap</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_mut_values</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an option of a mutable reference to the values of this [<code>PrimitiveArray</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">into_inner</a>(self) -&gt; (<a class=\"enum\" href=\"polars/datatypes/enum.ArrowDataType.html\" title=\"enum polars::datatypes::ArrowDataType\">ArrowDataType</a>, Buffer&lt;T&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bitmap&gt;)</h4></section></summary><div class=\"docblock\"><p>Returns its internal representation</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_inner</a>(\n    data_type: <a class=\"enum\" href=\"polars/datatypes/enum.ArrowDataType.html\" title=\"enum polars::datatypes::ArrowDataType\">ArrowDataType</a>,\n    values: Buffer&lt;T&gt;,\n    validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bitmap&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PrimitiveArray&lt;T&gt;, <a class=\"enum\" href=\"polars/error/enum.PolarsError.html\" title=\"enum polars::error::PolarsError\">PolarsError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a <code>[PrimitiveArray]</code> from its internal representation.\nThis is the inverted from <code>[PrimitiveArray::into_inner]</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner_unchecked\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a class=\"fn\">from_inner_unchecked</a>(\n    data_type: <a class=\"enum\" href=\"polars/datatypes/enum.ArrowDataType.html\" title=\"enum polars::datatypes::ArrowDataType\">ArrowDataType</a>,\n    values: Buffer&lt;T&gt;,\n    validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bitmap&gt;\n) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a <code>[PrimitiveArray]</code> from its internal representation.\nThis is the inverted from <code>[PrimitiveArray::into_inner]</code></p>\n<h5 id=\"safety-3\"><a href=\"#safety-3\">Safety</a></h5>\n<p>Callers must ensure all invariants of this struct are upheld.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">into_mut</a>(self) -&gt; <a class=\"enum\" href=\"https://docs.rs/either/1/either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;PrimitiveArray&lt;T&gt;, MutablePrimitiveArray&lt;T&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Either&lt;PrimitiveArray&lt;T&gt;, MutablePrimitiveArray&lt;T&gt;&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Try to convert this [<code>PrimitiveArray</code>] to a [<code>MutablePrimitiveArray</code>] via copy-on-write semantics.</p>\n<p>A [<code>PrimitiveArray</code>] is backed by a [<code>Buffer</code>] and [<code>Bitmap</code>] which are essentially <code>Arc&lt;Vec&lt;_&gt;&gt;</code>.\nThis function returns a [<code>MutablePrimitiveArray</code>] (via <a href=\"polars/prelude/struct.Arc.html#method.get_mut\" title=\"associated function polars::prelude::Arc::get_mut\"><code>std::sync::Arc::get_mut</code></a>) iff both values\nand validity have not been cloned / are unique references to their underlying vectors.</p>\n<p>This function is primarily used to re-use memory regions.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_empty\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_empty</a>(data_type: <a class=\"enum\" href=\"polars/datatypes/enum.ArrowDataType.html\" title=\"enum polars::datatypes::ArrowDataType\">ArrowDataType</a>) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a new empty (zero-length) [<code>PrimitiveArray</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_null\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_null</a>(data_type: <a class=\"enum\" href=\"polars/datatypes/enum.ArrowDataType.html\" title=\"enum polars::datatypes::ArrowDataType\">ArrowDataType</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a new [<code>PrimitiveArray</code>] where all slots are null / <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_values</a>&lt;I&gt;(iter: I) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Creates a (non-null) [<code>PrimitiveArray</code>] from an iterator of values.</p>\n<h5 id=\"implementation-5\"><a href=\"#implementation-5\">Implementation</a></h5>\n<p>This does not assume that the iterator has a known length.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>&lt;P&gt;(slice: P) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Creates a (non-null) [<code>PrimitiveArray</code>] from a slice of values.</p>\n<h5 id=\"implementation-6\"><a href=\"#implementation-6\">Implementation</a></h5>\n<p>This is essentially a memcopy and is thus <code>O(N)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_trusted_len_values_iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_trusted_len_values_iter</a>&lt;I&gt;(iter: I) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: TrustedLen&lt;Item = T&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Creates a (non-null) [<code>PrimitiveArray</code>] from a [<code>TrustedLen</code>] of values.</p>\n<h5 id=\"implementation-7\"><a href=\"#implementation-7\">Implementation</a></h5>\n<p>This does not assume that the iterator has a known length.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_trusted_len_values_iter_unchecked\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a class=\"fn\">from_trusted_len_values_iter_unchecked</a>&lt;I&gt;(\n    iter: I\n) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = T&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Creates a new [<code>PrimitiveArray</code>] from an iterator over values</p>\n<h5 id=\"safety-4\"><a href=\"#safety-4\">Safety</a></h5>\n<p>The iterator must be <a href=\"https://doc.rust-lang.org/std/iter/trait.TrustedLen.html\"><code>TrustedLen</code></a>.\nI.e. that <code>size_hint().1</code> correctly reports its length.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_trusted_len_iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_trusted_len_iter</a>&lt;I&gt;(iter: I) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: TrustedLen&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Creates a [<code>PrimitiveArray</code>] from a [<code>TrustedLen</code>] of optional values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_trusted_len_iter_unchecked\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a class=\"fn\">from_trusted_len_iter_unchecked</a>&lt;I&gt;(iter: I) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Creates a [<code>PrimitiveArray</code>] from an iterator of optional values.</p>\n<h5 id=\"safety-5\"><a href=\"#safety-5\">Safety</a></h5>\n<p>The iterator must be <a href=\"https://doc.rust-lang.org/std/iter/trait.TrustedLen.html\"><code>TrustedLen</code></a>.\nI.e. that <code>size_hint().1</code> correctly reports its length.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>(\n    data_type: <a class=\"enum\" href=\"polars/datatypes/enum.ArrowDataType.html\" title=\"enum polars::datatypes::ArrowDataType\">ArrowDataType</a>,\n    values: Buffer&lt;T&gt;,\n    validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bitmap&gt;\n) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Alias for <code>Self::try_new(..).unwrap()</code>.</p>\n<h5 id=\"panics-7\"><a href=\"#panics-7\">Panics</a></h5>\n<p>This function errors iff:</p>\n<ul>\n<li>The validity is not <code>None</code> and its length is different from <code>values</code>’s length</li>\n<li>The <code>data_type</code>’s [<code>PhysicalType</code>] is not equal to [<code>PhysicalType::Primitive</code>].</li>\n</ul>\n</div></details></div></details>",0,"polars::datatypes::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ArrayFromIter%3CT%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array_collect.rs.html#300\">source</a><a href=\"#impl-ArrayFromIter%3CT%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"polars/datatypes/trait.ArrayFromIter.html\" title=\"trait polars::datatypes::ArrayFromIter\">ArrayFromIter</a>&lt;T&gt; for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"polars/datatypes/trait.NumericNative.html\" title=\"trait polars::datatypes::NumericNative\">NumericNative</a>,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.arr_from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array_collect.rs.html#302\">source</a><a href=\"#method.arr_from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars/datatypes/trait.ArrayFromIter.html#tymethod.arr_from_iter\" class=\"fn\">arr_from_iter</a>&lt;I&gt;(iter: I) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</span></h4></section><section id=\"method.arr_from_iter_trusted\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array_collect.rs.html#307-310\">source</a><a href=\"#method.arr_from_iter_trusted\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars/datatypes/trait.ArrayFromIter.html#method.arr_from_iter_trusted\" class=\"fn\">arr_from_iter_trusted</a>&lt;I&gt;(iter: I) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,\n    &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>: TrustedLen,</span></h4></section><section id=\"method.try_arr_from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array_collect.rs.html#316\">source</a><a href=\"#method.try_arr_from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars/datatypes/trait.ArrayFromIter.html#tymethod.try_arr_from_iter\" class=\"fn\">try_arr_from_iter</a>&lt;E, I&gt;(iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PrimitiveArray&lt;T&gt;, E&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, E&gt;&gt;,</span></h4></section><section id=\"method.try_arr_from_iter_trusted\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array_collect.rs.html#322-325\">source</a><a href=\"#method.try_arr_from_iter_trusted\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars/datatypes/trait.ArrayFromIter.html#method.try_arr_from_iter_trusted\" class=\"fn\">try_arr_from_iter_trusted</a>&lt;E, I&gt;(iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PrimitiveArray&lt;T&gt;, E&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, E&gt;&gt;,\n    &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>: TrustedLen,</span></h4></section></div></details>","ArrayFromIter<T>","polars::datatypes::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ArrayFromIter%3COption%3CT%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array_collect.rs.html#332\">source</a><a href=\"#impl-ArrayFromIter%3COption%3CT%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"polars/datatypes/trait.ArrayFromIter.html\" title=\"trait polars::datatypes::ArrayFromIter\">ArrayFromIter</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt; for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"polars/datatypes/trait.NumericNative.html\" title=\"trait polars::datatypes::NumericNative\">NumericNative</a>,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.arr_from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array_collect.rs.html#333\">source</a><a href=\"#method.arr_from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars/datatypes/trait.ArrayFromIter.html#tymethod.arr_from_iter\" class=\"fn\">arr_from_iter</a>&lt;I&gt;(iter: I) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;,</span></h4></section><section id=\"method.arr_from_iter_trusted\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array_collect.rs.html#338-341\">source</a><a href=\"#method.arr_from_iter_trusted\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars/datatypes/trait.ArrayFromIter.html#method.arr_from_iter_trusted\" class=\"fn\">arr_from_iter_trusted</a>&lt;I&gt;(iter: I) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;,\n    &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>: TrustedLen,</span></h4></section><section id=\"method.try_arr_from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array_collect.rs.html#347-349\">source</a><a href=\"#method.try_arr_from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars/datatypes/trait.ArrayFromIter.html#tymethod.try_arr_from_iter\" class=\"fn\">try_arr_from_iter</a>&lt;E, I&gt;(iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PrimitiveArray&lt;T&gt;, E&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;, E&gt;&gt;,</span></h4></section><section id=\"method.try_arr_from_iter_trusted\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array_collect.rs.html#358-361\">source</a><a href=\"#method.try_arr_from_iter_trusted\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars/datatypes/trait.ArrayFromIter.html#method.try_arr_from_iter_trusted\" class=\"fn\">try_arr_from_iter_trusted</a>&lt;E, I&gt;(iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PrimitiveArray&lt;T&gt;, E&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;, E&gt;&gt;,\n    &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>: TrustedLen,</span></h4></section></div></details>","ArrayFromIter<Option<T>>","polars::datatypes::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StaticArray-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#85\">source</a><a href=\"#impl-StaticArray-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"polars/datatypes/trait.StaticArray.html\" title=\"trait polars::datatypes::StaticArray\">StaticArray</a> for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"polars/datatypes/trait.NumericNative.html\" title=\"trait polars::datatypes::NumericNative\">NumericNative</a>,</span></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.ValueT\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ValueT\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"polars/datatypes/trait.StaticArray.html#associatedtype.ValueT\" class=\"associatedtype\">ValueT</a>&lt;'a&gt; = T</h4></section><section id=\"associatedtype.ZeroableValueT\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ZeroableValueT\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"polars/datatypes/trait.StaticArray.html#associatedtype.ZeroableValueT\" class=\"associatedtype\">ZeroableValueT</a>&lt;'a&gt; = T</h4></section><section id=\"associatedtype.ValueIterT\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ValueIterT\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"polars/datatypes/trait.StaticArray.html#associatedtype.ValueIterT\" class=\"associatedtype\">ValueIterT</a>&lt;'a&gt; = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/iter/adapters/copied/struct.Copied.html\" title=\"struct core::iter::adapters::copied::Copied\">Copied</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.value_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#91\">source</a><a href=\"#method.value_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"polars/datatypes/trait.StaticArray.html#tymethod.value_unchecked\" class=\"fn\">value_unchecked</a>(\n    &amp;self,\n    idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>\n) -&gt; &lt;PrimitiveArray&lt;T&gt; as <a class=\"trait\" href=\"polars/datatypes/trait.StaticArray.html\" title=\"trait polars::datatypes::StaticArray\">StaticArray</a>&gt;::<a class=\"associatedtype\" href=\"polars/datatypes/trait.StaticArray.html#associatedtype.ValueT\" title=\"type polars::datatypes::StaticArray::ValueT\">ValueT</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Safety <a href=\"polars/datatypes/trait.StaticArray.html#tymethod.value_unchecked\">Read more</a></div></details><section id=\"method.values_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#95\">source</a><a href=\"#method.values_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars/datatypes/trait.StaticArray.html#tymethod.values_iter\" class=\"fn\">values_iter</a>(&amp;self) -&gt; &lt;PrimitiveArray&lt;T&gt; as <a class=\"trait\" href=\"polars/datatypes/trait.StaticArray.html\" title=\"trait polars::datatypes::StaticArray\">StaticArray</a>&gt;::<a class=\"associatedtype\" href=\"polars/datatypes/trait.StaticArray.html#associatedtype.ValueIterT\" title=\"type polars::datatypes::StaticArray::ValueIterT\">ValueIterT</a>&lt;'_&gt;</h4></section><section id=\"method.as_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#100\">source</a><a href=\"#method.as_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars/datatypes/trait.StaticArray.html#method.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[&lt;PrimitiveArray&lt;T&gt; as <a class=\"trait\" href=\"polars/datatypes/trait.StaticArray.html\" title=\"trait polars::datatypes::StaticArray\">StaticArray</a>&gt;::<a class=\"associatedtype\" href=\"polars/datatypes/trait.StaticArray.html#associatedtype.ValueT\" title=\"type polars::datatypes::StaticArray::ValueT\">ValueT</a>&lt;'_&gt;]&gt;</h4></section><section id=\"method.iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#104\">source</a><a href=\"#method.iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars/datatypes/trait.StaticArray.html#tymethod.iter\" class=\"fn\">iter</a>(\n    &amp;self\n) -&gt; ZipValidity&lt;&lt;PrimitiveArray&lt;T&gt; as <a class=\"trait\" href=\"polars/datatypes/trait.StaticArray.html\" title=\"trait polars::datatypes::StaticArray\">StaticArray</a>&gt;::<a class=\"associatedtype\" href=\"polars/datatypes/trait.StaticArray.html#associatedtype.ValueT\" title=\"type polars::datatypes::StaticArray::ValueT\">ValueT</a>&lt;'_&gt;, &lt;PrimitiveArray&lt;T&gt; as <a class=\"trait\" href=\"polars/datatypes/trait.StaticArray.html\" title=\"trait polars::datatypes::StaticArray\">StaticArray</a>&gt;::<a class=\"associatedtype\" href=\"polars/datatypes/trait.StaticArray.html#associatedtype.ValueIterT\" title=\"type polars::datatypes::StaticArray::ValueIterT\">ValueIterT</a>&lt;'_&gt;, BitmapIter&lt;'_&gt;&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"ZipValidity&lt;&lt;PrimitiveArray&lt;T&gt; as StaticArray&gt;::ValueT&lt;&#39;_&gt;, &lt;PrimitiveArray&lt;T&gt; as StaticArray&gt;::ValueIterT&lt;&#39;_&gt;, BitmapIter&lt;&#39;_&gt;&gt;\">ⓘ</a></h4></section><section id=\"method.with_validity_typed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#108\">source</a><a href=\"#method.with_validity_typed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars/datatypes/trait.StaticArray.html#tymethod.with_validity_typed\" class=\"fn\">with_validity_typed</a>(self, validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bitmap&gt;) -&gt; PrimitiveArray&lt;T&gt;</h4></section><section id=\"method.from_vec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#112\">source</a><a href=\"#method.from_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars/datatypes/trait.StaticArray.html#method.from_vec\" class=\"fn\">from_vec</a>(\n    v: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;PrimitiveArray&lt;T&gt; as <a class=\"trait\" href=\"polars/datatypes/trait.StaticArray.html\" title=\"trait polars::datatypes::StaticArray\">StaticArray</a>&gt;::<a class=\"associatedtype\" href=\"polars/datatypes/trait.StaticArray.html#associatedtype.ValueT\" title=\"type polars::datatypes::StaticArray::ValueT\">ValueT</a>&lt;'_&gt;&gt;,\n    _dtype: <a class=\"enum\" href=\"polars/datatypes/enum.DataType.html\" title=\"enum polars::datatypes::DataType\">DataType</a>\n) -&gt; PrimitiveArray&lt;T&gt;</h4></section><section id=\"method.from_zeroable_vec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#116\">source</a><a href=\"#method.from_zeroable_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars/datatypes/trait.StaticArray.html#method.from_zeroable_vec\" class=\"fn\">from_zeroable_vec</a>(\n    v: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;&lt;PrimitiveArray&lt;T&gt; as <a class=\"trait\" href=\"polars/datatypes/trait.StaticArray.html\" title=\"trait polars::datatypes::StaticArray\">StaticArray</a>&gt;::<a class=\"associatedtype\" href=\"polars/datatypes/trait.StaticArray.html#associatedtype.ZeroableValueT\" title=\"type polars::datatypes::StaticArray::ZeroableValueT\">ZeroableValueT</a>&lt;'_&gt;&gt;,\n    _dtype: <a class=\"enum\" href=\"polars/datatypes/enum.DataType.html\" title=\"enum polars::datatypes::DataType\">DataType</a>\n) -&gt; PrimitiveArray&lt;T&gt;</h4></section><section id=\"method.get\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#29\">source</a><a href=\"#method.get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars/datatypes/trait.StaticArray.html#method.get\" class=\"fn\">get</a>(&amp;self, idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"polars/datatypes/trait.StaticArray.html#associatedtype.ValueT\" title=\"type polars::datatypes::StaticArray::ValueT\">ValueT</a>&lt;'_&gt;&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#40\">source</a><a href=\"#method.get_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"polars/datatypes/trait.StaticArray.html#method.get_unchecked\" class=\"fn\">get_unchecked</a>(&amp;self, idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"polars/datatypes/trait.StaticArray.html#associatedtype.ValueT\" title=\"type polars::datatypes::StaticArray::ValueT\">ValueT</a>&lt;'_&gt;&gt;</h4></section></summary><div class='docblock'>Safety <a href=\"polars/datatypes/trait.StaticArray.html#method.get_unchecked\">Read more</a></div></details><section id=\"method.last\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#49\">source</a><a href=\"#method.last\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars/datatypes/trait.StaticArray.html#method.last\" class=\"fn\">last</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"polars/datatypes/trait.StaticArray.html#associatedtype.ValueT\" title=\"type polars::datatypes::StaticArray::ValueT\">ValueT</a>&lt;'_&gt;&gt;</h4></section><section id=\"method.value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#54\">source</a><a href=\"#method.value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars/datatypes/trait.StaticArray.html#method.value\" class=\"fn\">value</a>(&amp;self, idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Self::<a class=\"associatedtype\" href=\"polars/datatypes/trait.StaticArray.html#associatedtype.ValueT\" title=\"type polars::datatypes::StaticArray::ValueT\">ValueT</a>&lt;'_&gt;</h4></section></div></details>","StaticArray","polars::datatypes::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIteratorReversed%3CT%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-FromIteratorReversed%3CT%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; FromIteratorReversed&lt;T&gt; for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_trusted_len_iter_rev\" class=\"method trait-impl\"><a href=\"#method.from_trusted_len_iter_rev\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_trusted_len_iter_rev</a>&lt;I&gt;(iter: I) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: TrustedLen&lt;Item = T&gt;,</span></h4></section></div></details>","FromIteratorReversed<T>","polars::datatypes::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIteratorReversed%3COption%3CT%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-FromIteratorReversed%3COption%3CT%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; FromIteratorReversed&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt; for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_trusted_len_iter_rev\" class=\"method trait-impl\"><a href=\"#method.from_trusted_len_iter_rev\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_trusted_len_iter_rev</a>&lt;I&gt;(iter: I) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: TrustedLen&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;,</span></h4></section></div></details>","FromIteratorReversed<Option<T>>","polars::datatypes::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26dyn+Array%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq%3C%26dyn+Array%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&amp;(dyn Array + 'static)&gt; for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;(dyn Array + 'static)) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&(dyn Array + 'static)>","polars::datatypes::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;PrimitiveArray&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","polars::datatypes::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromData%3CBuffer%3CT%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-FromData%3CBuffer%3CT%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"polars/prelude/default_arrays/trait.FromData.html\" title=\"trait polars::prelude::default_arrays::FromData\">FromData</a>&lt;Buffer&lt;T&gt;&gt; for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_data_default\" class=\"method trait-impl\"><a href=\"#method.from_data_default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars/prelude/default_arrays/trait.FromData.html#tymethod.from_data_default\" class=\"fn\">from_data_default</a>(\n    values: Buffer&lt;T&gt;,\n    validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bitmap&gt;\n) -&gt; PrimitiveArray&lt;T&gt;</h4></section></div></details>","FromData<Buffer<T>>","polars::datatypes::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CPtr%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-FromIterator%3CPtr%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, Ptr&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;Ptr&gt; for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,\n    Ptr: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(iter: I) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = Ptr&gt;,</span></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<Ptr>","polars::datatypes::IdxArr"],["<section id=\"impl-ArrowArray-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-ArrowArray-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; ArrowArray for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section>","ArrowArray","polars::datatypes::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-IntoIterator-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = ZipValidity&lt;T, IntoIter&lt;T&gt;, IntoIter&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; &lt;PrimitiveArray&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","polars::datatypes::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","polars::datatypes::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGrowablePrimitive%3C'a,+T%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-From%3CGrowablePrimitive%3C'a,+T%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;GrowablePrimitive&lt;'a, T&gt;&gt; for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: GrowablePrimitive&lt;'a, T&gt;) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GrowablePrimitive<'a, T>>","polars::datatypes::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CP%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-From%3CP%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;P&gt; for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(slice: P) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<P>","polars::datatypes::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMutablePrimitiveArray%3CT%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-From%3CMutablePrimitiveArray%3CT%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;MutablePrimitiveArray&lt;T&gt;&gt; for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: MutablePrimitiveArray&lt;T&gt;) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<MutablePrimitiveArray<T>>","polars::datatypes::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-Default-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","polars::datatypes::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromTrustedLenIterator%3CT%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-FromTrustedLenIterator%3CT%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; FromTrustedLenIterator&lt;T&gt; for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_iter_trusted_length\" class=\"method trait-impl\"><a href=\"#method.from_iter_trusted_length\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_iter_trusted_length</a>&lt;I&gt;(iter: I) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,\n    &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>: TrustedLen,</span></h4></section></div></details>","FromTrustedLenIterator<T>","polars::datatypes::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; FromTrustedLenIterator&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt; for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_iter_trusted_length\" class=\"method trait-impl\"><a href=\"#method.from_iter_trusted_length\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_iter_trusted_length</a>&lt;I&gt;(iter: I) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;,\n    &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>: TrustedLen,</span></h4></section></div></details>","FromTrustedLenIterator<Option<T>>","polars::datatypes::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Array-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-Array-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Array for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any\" class=\"method trait-impl\"><a href=\"#method.as_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_any</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Converts itself to a reference of <a href=\"https://doc.rust-lang.org/nightly/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>Any</code></a>, which enables downcasting to concrete types.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any_mut\" class=\"method trait-impl\"><a href=\"#method.as_any_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_any_mut</a>(&amp;mut self) -&gt; &amp;mut (dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Converts itself to a mutable reference of <a href=\"https://doc.rust-lang.org/nightly/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>Any</code></a>, which enables mutable downcasting to concrete types.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method trait-impl\"><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The length of the [<code>Array</code>]. Every array has a length corresponding to the number of\nelements (slots).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.data_type\" class=\"method trait-impl\"><a href=\"#method.data_type\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">data_type</a>(&amp;self) -&gt; &amp;<a class=\"enum\" href=\"polars/datatypes/enum.ArrowDataType.html\" title=\"enum polars::datatypes::ArrowDataType\">ArrowDataType</a></h4></section></summary><div class='docblock'>The <a href=\"polars/datatypes/enum.ArrowDataType.html\" title=\"enum polars::datatypes::ArrowDataType\"><code>ArrowDataType</code></a> of the [<code>Array</code>]. In combination with [<code>Array::as_any</code>], this can be\nused to downcast trait objects (<code>dyn Array</code>) to concrete arrays.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice\" class=\"method trait-impl\"><a href=\"#method.slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">slice</a>(&amp;mut self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Slices this [<code>Array</code>]. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_unchecked\" class=\"method trait-impl\"><a href=\"#method.slice_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">slice_unchecked</a>(&amp;mut self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Slices the [<code>Array</code>]. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_boxed\" class=\"method trait-impl\"><a href=\"#method.to_boxed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_boxed</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn Array&gt;</h4></section></summary><div class='docblock'>Clone a <code>&amp;dyn Array</code> to an owned <code>Box&lt;dyn Array&gt;</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validity\" class=\"method trait-impl\"><a href=\"#method.validity\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">validity</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;Bitmap&gt;</h4></section></summary><div class='docblock'>The validity of the [<code>Array</code>]: every array has an optional [<code>Bitmap</code>] that, when available\nspecifies whether the array slot is valid or not (null).\nWhen the validity is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, all slots are valid.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_validity\" class=\"method trait-impl\"><a href=\"#method.with_validity\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_validity</a>(&amp;self, validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bitmap&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn Array&gt;</h4></section></summary><div class='docblock'>Clones this [<code>Array</code>] with a new new assigned bitmap. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method trait-impl\"><a href=\"#method.is_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>whether the array is empty</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.null_count\" class=\"method trait-impl\"><a href=\"#method.null_count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">null_count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of null slots on this [<code>Array</code>]. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_null\" class=\"method trait-impl\"><a href=\"#method.is_null\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_null</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns whether slot <code>i</code> is null. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_null_unchecked\" class=\"method trait-impl\"><a href=\"#method.is_null_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">is_null_unchecked</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns whether slot <code>i</code> is null. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_valid\" class=\"method trait-impl\"><a href=\"#method.is_valid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_valid</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns whether slot <code>i</code> is valid. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sliced\" class=\"method trait-impl\"><a href=\"#method.sliced\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sliced</a>(&amp;self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn Array&gt;</h4></section></summary><div class='docblock'>Returns a slice of this [<code>Array</code>]. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sliced_unchecked\" class=\"method trait-impl\"><a href=\"#method.sliced_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">sliced_unchecked</a>(\n    &amp;self,\n    offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn Array&gt;</h4></section></summary><div class='docblock'>Returns a slice of this [<code>Array</code>]. <a>Read more</a></div></details></div></details>","Array","polars::datatypes::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-Clone-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + NativeType,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","polars::datatypes::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TotalOrdKernel-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-TotalOrdKernel-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; TotalOrdKernel for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType + NotSimdPrimitive + <a class=\"trait\" href=\"polars_utils/total_ord/trait.TotalOrd.html\" title=\"trait polars_utils::total_ord::TotalOrd\">TotalOrd</a>,</span></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Scalar</a> = T</h4></section><section id=\"method.tot_lt_kernel\" class=\"method trait-impl\"><a href=\"#method.tot_lt_kernel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_lt_kernel</a>(&amp;self, other: &amp;PrimitiveArray&lt;T&gt;) -&gt; Bitmap</h4></section><section id=\"method.tot_le_kernel\" class=\"method trait-impl\"><a href=\"#method.tot_le_kernel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_le_kernel</a>(&amp;self, other: &amp;PrimitiveArray&lt;T&gt;) -&gt; Bitmap</h4></section><section id=\"method.tot_eq_kernel\" class=\"method trait-impl\"><a href=\"#method.tot_eq_kernel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_eq_kernel</a>(&amp;self, other: &amp;PrimitiveArray&lt;T&gt;) -&gt; Bitmap</h4></section><section id=\"method.tot_ne_kernel\" class=\"method trait-impl\"><a href=\"#method.tot_ne_kernel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_ne_kernel</a>(&amp;self, other: &amp;PrimitiveArray&lt;T&gt;) -&gt; Bitmap</h4></section><section id=\"method.tot_eq_kernel_broadcast\" class=\"method trait-impl\"><a href=\"#method.tot_eq_kernel_broadcast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_eq_kernel_broadcast</a>(\n    &amp;self,\n    other: &amp;&lt;PrimitiveArray&lt;T&gt; as TotalOrdKernel&gt;::Scalar\n) -&gt; Bitmap</h4></section><section id=\"method.tot_ne_kernel_broadcast\" class=\"method trait-impl\"><a href=\"#method.tot_ne_kernel_broadcast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_ne_kernel_broadcast</a>(\n    &amp;self,\n    other: &amp;&lt;PrimitiveArray&lt;T&gt; as TotalOrdKernel&gt;::Scalar\n) -&gt; Bitmap</h4></section><section id=\"method.tot_lt_kernel_broadcast\" class=\"method trait-impl\"><a href=\"#method.tot_lt_kernel_broadcast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_lt_kernel_broadcast</a>(\n    &amp;self,\n    other: &amp;&lt;PrimitiveArray&lt;T&gt; as TotalOrdKernel&gt;::Scalar\n) -&gt; Bitmap</h4></section><section id=\"method.tot_le_kernel_broadcast\" class=\"method trait-impl\"><a href=\"#method.tot_le_kernel_broadcast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_le_kernel_broadcast</a>(\n    &amp;self,\n    other: &amp;&lt;PrimitiveArray&lt;T&gt; as TotalOrdKernel&gt;::Scalar\n) -&gt; Bitmap</h4></section><section id=\"method.tot_gt_kernel_broadcast\" class=\"method trait-impl\"><a href=\"#method.tot_gt_kernel_broadcast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_gt_kernel_broadcast</a>(\n    &amp;self,\n    other: &amp;&lt;PrimitiveArray&lt;T&gt; as TotalOrdKernel&gt;::Scalar\n) -&gt; Bitmap</h4></section><section id=\"method.tot_ge_kernel_broadcast\" class=\"method trait-impl\"><a href=\"#method.tot_ge_kernel_broadcast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_ge_kernel_broadcast</a>(\n    &amp;self,\n    other: &amp;&lt;PrimitiveArray&lt;T&gt; as TotalOrdKernel&gt;::Scalar\n) -&gt; Bitmap</h4></section><section id=\"method.tot_gt_kernel\" class=\"method trait-impl\"><a href=\"#method.tot_gt_kernel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_gt_kernel</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>) -&gt; Bitmap</h4></section><section id=\"method.tot_ge_kernel\" class=\"method trait-impl\"><a href=\"#method.tot_ge_kernel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_ge_kernel</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>) -&gt; Bitmap</h4></section><section id=\"method.tot_eq_missing_kernel\" class=\"method trait-impl\"><a href=\"#method.tot_eq_missing_kernel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_eq_missing_kernel</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>) -&gt; Bitmap</h4></section><section id=\"method.tot_ne_missing_kernel\" class=\"method trait-impl\"><a href=\"#method.tot_ne_missing_kernel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_ne_missing_kernel</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>) -&gt; Bitmap</h4></section><section id=\"method.tot_eq_missing_kernel_broadcast\" class=\"method trait-impl\"><a href=\"#method.tot_eq_missing_kernel_broadcast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_eq_missing_kernel_broadcast</a>(&amp;self, other: &amp;Self::Scalar) -&gt; Bitmap</h4></section><section id=\"method.tot_ne_missing_kernel_broadcast\" class=\"method trait-impl\"><a href=\"#method.tot_ne_missing_kernel_broadcast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_ne_missing_kernel_broadcast</a>(&amp;self, other: &amp;Self::Scalar) -&gt; Bitmap</h4></section></div></details>","TotalOrdKernel","polars::datatypes::IdxArr"]],
"polars_core":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_new</a>(\n    data_type: <a class=\"enum\" href=\"polars_core/datatypes/enum.ArrowDataType.html\" title=\"enum polars_core::datatypes::ArrowDataType\">ArrowDataType</a>,\n    values: Buffer&lt;T&gt;,\n    validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bitmap&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PrimitiveArray&lt;T&gt;, <a class=\"enum\" href=\"polars_core/prelude/enum.PolarsError.html\" title=\"enum polars_core::prelude::PolarsError\">PolarsError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>The canonical method to create a [<code>PrimitiveArray</code>] out of its internal components.</p>\n<h5 id=\"implementation\"><a href=\"#implementation\">Implementation</a></h5>\n<p>This function is <code>O(1)</code>.</p>\n<h5 id=\"errors\"><a href=\"#errors\">Errors</a></h5>\n<p>This function errors iff:</p>\n<ul>\n<li>The validity is not <code>None</code> and its length is different from <code>values</code>’s length</li>\n<li>The <code>data_type</code>’s [<code>PhysicalType</code>] is not equal to [<code>PhysicalType::Primitive(T::PRIMITIVE)</code>]</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to</a>(self, data_type: <a class=\"enum\" href=\"polars_core/datatypes/enum.ArrowDataType.html\" title=\"enum polars_core::datatypes::ArrowDataType\">ArrowDataType</a>) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a new [<code>PrimitiveArray</code>] with a different logical type.</p>\n<p>This function is useful to assign a different <a href=\"polars_core/datatypes/enum.ArrowDataType.html\" title=\"enum polars_core::datatypes::ArrowDataType\"><code>ArrowDataType</code></a> to the array.\nUsed to change the arrays’ logical type (see example).</p>\n<h5 id=\"example\"><a href=\"#example\">Example</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>polars_arrow::array::Int32Array;\n<span class=\"kw\">use </span>polars_arrow::datatypes::ArrowDataType;\n\n<span class=\"kw\">let </span>array = Int32Array::from(<span class=\"kw-2\">&amp;</span>[<span class=\"prelude-val\">Some</span>(<span class=\"number\">1</span>), <span class=\"prelude-val\">None</span>, <span class=\"prelude-val\">Some</span>(<span class=\"number\">2</span>)]).to(ArrowDataType::Date32);\n<span class=\"macro\">assert_eq!</span>(\n   <span class=\"macro\">format!</span>(<span class=\"string\">&quot;{:?}&quot;</span>, array),\n   <span class=\"string\">&quot;Date32[1970-01-02, None, 1970-01-03]&quot;\n</span>);</code></pre></div>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>Panics iff the <code>data_type</code>’s [<code>PhysicalType</code>] is not equal to [<code>PhysicalType::Primitive(T::PRIMITIVE)</code>]</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_vec\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_vec</a>(values: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a (non-null) [<code>PrimitiveArray</code>] from a vector of values.\nThis function is <code>O(1)</code>.</p>\n<h5 id=\"examples\"><a href=\"#examples\">Examples</a></h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>polars_arrow::array::PrimitiveArray;\n\n<span class=\"kw\">let </span>array = PrimitiveArray::from_vec(<span class=\"macro\">vec!</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]);\n<span class=\"macro\">assert_eq!</span>(<span class=\"macro\">format!</span>(<span class=\"string\">&quot;{:?}&quot;</span>, array), <span class=\"string\">&quot;Int32[1, 2, 3]&quot;</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">iter</a>(&amp;self) -&gt; ZipValidity&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'_, T&gt;, BitmapIter&lt;'_&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an iterator over the values and validity, <code>Option&lt;&amp;T&gt;</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.values_iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">values_iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'_, T&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;&#39;_, T&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns an iterator of the values, <code>&amp;T</code>, ignoring the arrays’ validity.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the length of this array</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">values</a>(&amp;self) -&gt; &amp;Buffer&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>The values [<code>Buffer</code>].\nValues on null slots are undetermined (they can be anything).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validity\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">validity</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;Bitmap&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the optional validity.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.data_type\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">data_type</a>(&amp;self) -&gt; &amp;<a class=\"enum\" href=\"polars_core/datatypes/enum.ArrowDataType.html\" title=\"enum polars_core::datatypes::ArrowDataType\">ArrowDataType</a></h4></section></summary><div class=\"docblock\"><p>Returns the arrays’ <a href=\"polars_core/datatypes/enum.ArrowDataType.html\" title=\"enum polars_core::datatypes::ArrowDataType\"><code>ArrowDataType</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.value\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">value</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the value at slot <code>i</code>.</p>\n<p>Equivalent to <code>self.values()[i]</code>. The value of a null slot is undetermined (it can be anything).</p>\n<h5 id=\"panic\"><a href=\"#panic\">Panic</a></h5>\n<p>This function panics iff <code>i &gt;= self.len</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.value_unchecked\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a class=\"fn\">value_unchecked</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Returns the value at index <code>i</code>.\nThe value on null slots is undetermined (it can be anything).</p>\n<h5 id=\"safety\"><a href=\"#safety\">Safety</a></h5>\n<p>Caller must be sure that <code>i &lt; self.len()</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the element at index <code>i</code> or <code>None</code> if it is null</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>iff <code>i &gt;= self.len()</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">slice</a>(&amp;mut self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Slices this [<code>PrimitiveArray</code>] by an offset and length.</p>\n<h5 id=\"implementation-1\"><a href=\"#implementation-1\">Implementation</a></h5>\n<p>This operation is <code>O(1)</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_unchecked\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a class=\"fn\">slice_unchecked</a>(&amp;mut self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Slices this [<code>PrimitiveArray</code>] by an offset and length.</p>\n<h5 id=\"implementation-2\"><a href=\"#implementation-2\">Implementation</a></h5>\n<p>This operation is <code>O(1)</code>.</p>\n<h5 id=\"safety-1\"><a href=\"#safety-1\">Safety</a></h5>\n<p>The caller must ensure that <code>offset + length &lt;= self.len()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sliced\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">sliced</a>(self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this array sliced.</p>\n<h5 id=\"implementation-3\"><a href=\"#implementation-3\">Implementation</a></h5>\n<p>This function is <code>O(1)</code>.</p>\n<h5 id=\"panics-2\"><a href=\"#panics-2\">Panics</a></h5>\n<p>iff <code>offset + length &gt; self.len()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sliced_unchecked\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a class=\"fn\">sliced_unchecked</a>(\n    self,\n    offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>\n) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this array sliced.</p>\n<h5 id=\"implementation-4\"><a href=\"#implementation-4\">Implementation</a></h5>\n<p>This function is <code>O(1)</code>.</p>\n<h5 id=\"safety-2\"><a href=\"#safety-2\">Safety</a></h5>\n<p>The caller must ensure that <code>offset + length &lt;= self.len()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_validity\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">with_validity</a>(self, validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bitmap&gt;) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this array with a new validity.</p>\n<h5 id=\"panic-1\"><a href=\"#panic-1\">Panic</a></h5>\n<p>Panics iff <code>validity.len() != self.len()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_validity\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_validity</a>(&amp;mut self, validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bitmap&gt;)</h4></section></summary><div class=\"docblock\"><p>Sets the validity of this array.</p>\n<h5 id=\"panics-3\"><a href=\"#panics-3\">Panics</a></h5>\n<p>This function panics iff <code>values.len() != self.len()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.boxed\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">boxed</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn Array&gt;</h4></section></summary><div class=\"docblock\"><p>Boxes this array into a <a href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\"><code>Box&lt;dyn Array&gt;</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arced\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">arced</a>(self) -&gt; <a class=\"struct\" href=\"polars_core/prelude/struct.Arc.html\" title=\"struct polars_core::prelude::Arc\">Arc</a>&lt;dyn Array&gt;</h4></section></summary><div class=\"docblock\"><p>Arcs this array into a <a href=\"polars_core/prelude/struct.Arc.html\" title=\"struct polars_core::prelude::Arc\"><code>std::sync::Arc&lt;dyn Array&gt;</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">with_values</a>(self, values: Buffer&lt;T&gt;) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns this [<code>PrimitiveArray</code>] with new values.</p>\n<h5 id=\"panics-4\"><a href=\"#panics-4\">Panics</a></h5>\n<p>This function panics iff <code>values.len() != self.len()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_values</a>(&amp;mut self, values: Buffer&lt;T&gt;)</h4></section></summary><div class=\"docblock\"><p>Update the values of this [<code>PrimitiveArray</code>].</p>\n<h5 id=\"panics-5\"><a href=\"#panics-5\">Panics</a></h5>\n<p>This function panics iff <code>values.len() != self.len()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply_validity\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">apply_validity</a>&lt;F&gt;(&amp;mut self, f: F)<span class=\"where fmt-newline\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(Bitmap) -&gt; Bitmap,</span></h4></section></summary><div class=\"docblock\"><p>Applies a function <code>f</code> to the validity of this array.</p>\n<p>This is an API to leverage clone-on-write</p>\n<h5 id=\"panics-6\"><a href=\"#panics-6\">Panics</a></h5>\n<p>This function panics if the function <code>f</code> modifies the length of the [<code>Bitmap</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get_mut_values</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an option of a mutable reference to the values of this [<code>PrimitiveArray</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">into_inner</a>(self) -&gt; (<a class=\"enum\" href=\"polars_core/datatypes/enum.ArrowDataType.html\" title=\"enum polars_core::datatypes::ArrowDataType\">ArrowDataType</a>, Buffer&lt;T&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bitmap&gt;)</h4></section></summary><div class=\"docblock\"><p>Returns its internal representation</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_inner</a>(\n    data_type: <a class=\"enum\" href=\"polars_core/datatypes/enum.ArrowDataType.html\" title=\"enum polars_core::datatypes::ArrowDataType\">ArrowDataType</a>,\n    values: Buffer&lt;T&gt;,\n    validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bitmap&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PrimitiveArray&lt;T&gt;, <a class=\"enum\" href=\"polars_core/prelude/enum.PolarsError.html\" title=\"enum polars_core::prelude::PolarsError\">PolarsError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a <code>[PrimitiveArray]</code> from its internal representation.\nThis is the inverted from <code>[PrimitiveArray::into_inner]</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_inner_unchecked\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a class=\"fn\">from_inner_unchecked</a>(\n    data_type: <a class=\"enum\" href=\"polars_core/datatypes/enum.ArrowDataType.html\" title=\"enum polars_core::datatypes::ArrowDataType\">ArrowDataType</a>,\n    values: Buffer&lt;T&gt;,\n    validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bitmap&gt;\n) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a <code>[PrimitiveArray]</code> from its internal representation.\nThis is the inverted from <code>[PrimitiveArray::into_inner]</code></p>\n<h5 id=\"safety-3\"><a href=\"#safety-3\">Safety</a></h5>\n<p>Callers must ensure all invariants of this struct are upheld.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">into_mut</a>(self) -&gt; <a class=\"enum\" href=\"https://docs.rs/either/1/either/enum.Either.html\" title=\"enum either::Either\">Either</a>&lt;PrimitiveArray&lt;T&gt;, MutablePrimitiveArray&lt;T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Try to convert this [<code>PrimitiveArray</code>] to a [<code>MutablePrimitiveArray</code>] via copy-on-write semantics.</p>\n<p>A [<code>PrimitiveArray</code>] is backed by a [<code>Buffer</code>] and [<code>Bitmap</code>] which are essentially <code>Arc&lt;Vec&lt;_&gt;&gt;</code>.\nThis function returns a [<code>MutablePrimitiveArray</code>] (via <a href=\"polars_core/prelude/struct.Arc.html#method.get_mut\" title=\"associated function polars_core::prelude::Arc::get_mut\"><code>std::sync::Arc::get_mut</code></a>) iff both values\nand validity have not been cloned / are unique references to their underlying vectors.</p>\n<p>This function is primarily used to re-use memory regions.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_empty\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_empty</a>(data_type: <a class=\"enum\" href=\"polars_core/datatypes/enum.ArrowDataType.html\" title=\"enum polars_core::datatypes::ArrowDataType\">ArrowDataType</a>) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a new empty (zero-length) [<code>PrimitiveArray</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_null\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new_null</a>(data_type: <a class=\"enum\" href=\"polars_core/datatypes/enum.ArrowDataType.html\" title=\"enum polars_core::datatypes::ArrowDataType\">ArrowDataType</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a new [<code>PrimitiveArray</code>] where all slots are null / <code>None</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_values\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_values</a>&lt;I&gt;(iter: I) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Creates a (non-null) [<code>PrimitiveArray</code>] from an iterator of values.</p>\n<h5 id=\"implementation-5\"><a href=\"#implementation-5\">Implementation</a></h5>\n<p>This does not assume that the iterator has a known length.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_slice</a>&lt;P&gt;(slice: P) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[T]</a>&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Creates a (non-null) [<code>PrimitiveArray</code>] from a slice of values.</p>\n<h5 id=\"implementation-6\"><a href=\"#implementation-6\">Implementation</a></h5>\n<p>This is essentially a memcopy and is thus <code>O(N)</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_trusted_len_values_iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_trusted_len_values_iter</a>&lt;I&gt;(iter: I) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: TrustedLen&lt;Item = T&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Creates a (non-null) [<code>PrimitiveArray</code>] from a [<code>TrustedLen</code>] of values.</p>\n<h5 id=\"implementation-7\"><a href=\"#implementation-7\">Implementation</a></h5>\n<p>This does not assume that the iterator has a known length.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_trusted_len_values_iter_unchecked\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a class=\"fn\">from_trusted_len_values_iter_unchecked</a>&lt;I&gt;(\n    iter: I\n) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = T&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Creates a new [<code>PrimitiveArray</code>] from an iterator over values</p>\n<h5 id=\"safety-4\"><a href=\"#safety-4\">Safety</a></h5>\n<p>The iterator must be <a href=\"https://doc.rust-lang.org/std/iter/trait.TrustedLen.html\"><code>TrustedLen</code></a>.\nI.e. that <code>size_hint().1</code> correctly reports its length.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_trusted_len_iter\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_trusted_len_iter</a>&lt;I&gt;(iter: I) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: TrustedLen&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Creates a [<code>PrimitiveArray</code>] from a [<code>TrustedLen</code>] of optional values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_trusted_len_iter_unchecked\" class=\"method\"><h4 class=\"code-header\">pub unsafe fn <a class=\"fn\">from_trusted_len_iter_unchecked</a>&lt;I&gt;(iter: I) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;,</span></h4></section></summary><div class=\"docblock\"><p>Creates a [<code>PrimitiveArray</code>] from an iterator of optional values.</p>\n<h5 id=\"safety-5\"><a href=\"#safety-5\">Safety</a></h5>\n<p>The iterator must be <a href=\"https://doc.rust-lang.org/std/iter/trait.TrustedLen.html\"><code>TrustedLen</code></a>.\nI.e. that <code>size_hint().1</code> correctly reports its length.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>(\n    data_type: <a class=\"enum\" href=\"polars_core/datatypes/enum.ArrowDataType.html\" title=\"enum polars_core::datatypes::ArrowDataType\">ArrowDataType</a>,\n    values: Buffer&lt;T&gt;,\n    validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bitmap&gt;\n) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Alias for <code>Self::try_new(..).unwrap()</code>.</p>\n<h5 id=\"panics-7\"><a href=\"#panics-7\">Panics</a></h5>\n<p>This function errors iff:</p>\n<ul>\n<li>The validity is not <code>None</code> and its length is different from <code>values</code>’s length</li>\n<li>The <code>data_type</code>’s [<code>PhysicalType</code>] is not equal to [<code>PhysicalType::Primitive</code>].</li>\n</ul>\n</div></details></div></details>",0,"polars_core::prelude::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26dyn+Array%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq%3C%26dyn+Array%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&amp;(dyn Array + 'static)&gt; for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;(dyn Array + 'static)) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&(dyn Array + 'static)>","polars_core::prelude::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;PrimitiveArray&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","polars_core::prelude::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIteratorReversed%3COption%3CT%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-FromIteratorReversed%3COption%3CT%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; FromIteratorReversed&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt; for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_trusted_len_iter_rev\" class=\"method trait-impl\"><a href=\"#method.from_trusted_len_iter_rev\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_trusted_len_iter_rev</a>&lt;I&gt;(iter: I) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: TrustedLen&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;,</span></h4></section></div></details>","FromIteratorReversed<Option<T>>","polars_core::prelude::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIteratorReversed%3CT%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-FromIteratorReversed%3CT%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; FromIteratorReversed&lt;T&gt; for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_trusted_len_iter_rev\" class=\"method trait-impl\"><a href=\"#method.from_trusted_len_iter_rev\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">from_trusted_len_iter_rev</a>&lt;I&gt;(iter: I) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: TrustedLen&lt;Item = T&gt;,</span></h4></section></div></details>","FromIteratorReversed<T>","polars_core::prelude::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-IntoIterator-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = ZipValidity&lt;T, IntoIter&lt;T&gt;, IntoIter&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; &lt;PrimitiveArray&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","polars_core::prelude::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CPtr%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-FromIterator%3CPtr%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, Ptr&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;Ptr&gt; for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,\n    Ptr: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(iter: I) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = Ptr&gt;,</span></h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<Ptr>","polars_core::prelude::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromData%3CBuffer%3CT%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-FromData%3CBuffer%3CT%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"polars_core/prelude/default_arrays/trait.FromData.html\" title=\"trait polars_core::prelude::default_arrays::FromData\">FromData</a>&lt;Buffer&lt;T&gt;&gt; for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_data_default\" class=\"method trait-impl\"><a href=\"#method.from_data_default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/prelude/default_arrays/trait.FromData.html#tymethod.from_data_default\" class=\"fn\">from_data_default</a>(\n    values: Buffer&lt;T&gt;,\n    validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bitmap&gt;\n) -&gt; PrimitiveArray&lt;T&gt;</h4></section></div></details>","FromData<Buffer<T>>","polars_core::prelude::IdxArr"],["<section id=\"impl-ArrowArray-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-ArrowArray-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; ArrowArray for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section>","ArrowArray","polars_core::prelude::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-Debug-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","polars_core::prelude::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CGrowablePrimitive%3C'a,+T%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-From%3CGrowablePrimitive%3C'a,+T%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;GrowablePrimitive&lt;'a, T&gt;&gt; for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(val: GrowablePrimitive&lt;'a, T&gt;) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<GrowablePrimitive<'a, T>>","polars_core::prelude::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CMutablePrimitiveArray%3CT%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-From%3CMutablePrimitiveArray%3CT%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;MutablePrimitiveArray&lt;T&gt;&gt; for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: MutablePrimitiveArray&lt;T&gt;) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<MutablePrimitiveArray<T>>","polars_core::prelude::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CP%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-From%3CP%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;P&gt; for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;]&gt;,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(slice: P) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<P>","polars_core::prelude::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-Default-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","polars_core::prelude::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Array-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-Array-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; Array for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any\" class=\"method trait-impl\"><a href=\"#method.as_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_any</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Converts itself to a reference of <a href=\"https://doc.rust-lang.org/nightly/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>Any</code></a>, which enables downcasting to concrete types.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any_mut\" class=\"method trait-impl\"><a href=\"#method.as_any_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">as_any_mut</a>(&amp;mut self) -&gt; &amp;mut (dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Converts itself to a mutable reference of <a href=\"https://doc.rust-lang.org/nightly/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>Any</code></a>, which enables mutable downcasting to concrete types.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method trait-impl\"><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The length of the [<code>Array</code>]. Every array has a length corresponding to the number of\nelements (slots).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.data_type\" class=\"method trait-impl\"><a href=\"#method.data_type\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">data_type</a>(&amp;self) -&gt; &amp;<a class=\"enum\" href=\"polars_core/datatypes/enum.ArrowDataType.html\" title=\"enum polars_core::datatypes::ArrowDataType\">ArrowDataType</a></h4></section></summary><div class='docblock'>The <a href=\"polars_core/datatypes/enum.ArrowDataType.html\" title=\"enum polars_core::datatypes::ArrowDataType\"><code>ArrowDataType</code></a> of the [<code>Array</code>]. In combination with [<code>Array::as_any</code>], this can be\nused to downcast trait objects (<code>dyn Array</code>) to concrete arrays.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice\" class=\"method trait-impl\"><a href=\"#method.slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">slice</a>(&amp;mut self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Slices this [<code>Array</code>]. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_unchecked\" class=\"method trait-impl\"><a href=\"#method.slice_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">slice_unchecked</a>(&amp;mut self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class='docblock'>Slices the [<code>Array</code>]. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_boxed\" class=\"method trait-impl\"><a href=\"#method.to_boxed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">to_boxed</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn Array&gt;</h4></section></summary><div class='docblock'>Clone a <code>&amp;dyn Array</code> to an owned <code>Box&lt;dyn Array&gt;</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.validity\" class=\"method trait-impl\"><a href=\"#method.validity\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">validity</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;Bitmap&gt;</h4></section></summary><div class='docblock'>The validity of the [<code>Array</code>]: every array has an optional [<code>Bitmap</code>] that, when available\nspecifies whether the array slot is valid or not (null).\nWhen the validity is <a href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a>, all slots are valid.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_validity\" class=\"method trait-impl\"><a href=\"#method.with_validity\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">with_validity</a>(&amp;self, validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bitmap&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn Array&gt;</h4></section></summary><div class='docblock'>Clones this [<code>Array</code>] with a new new assigned bitmap. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method trait-impl\"><a href=\"#method.is_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>whether the array is empty</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.null_count\" class=\"method trait-impl\"><a href=\"#method.null_count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">null_count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of null slots on this [<code>Array</code>]. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_null\" class=\"method trait-impl\"><a href=\"#method.is_null\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_null</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns whether slot <code>i</code> is null. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_null_unchecked\" class=\"method trait-impl\"><a href=\"#method.is_null_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">is_null_unchecked</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns whether slot <code>i</code> is null. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_valid\" class=\"method trait-impl\"><a href=\"#method.is_valid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_valid</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns whether slot <code>i</code> is valid. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sliced\" class=\"method trait-impl\"><a href=\"#method.sliced\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">sliced</a>(&amp;self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn Array&gt;</h4></section></summary><div class='docblock'>Returns a slice of this [<code>Array</code>]. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sliced_unchecked\" class=\"method trait-impl\"><a href=\"#method.sliced_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">sliced_unchecked</a>(\n    &amp;self,\n    offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn Array&gt;</h4></section></summary><div class='docblock'>Returns a slice of this [<code>Array</code>]. <a>Read more</a></div></details></div></details>","Array","polars_core::prelude::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-Clone-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + NativeType,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; PrimitiveArray&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","polars_core::prelude::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromTrustedLenIterator%3CT%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-FromTrustedLenIterator%3CT%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"polars_core/utils/trait.FromTrustedLenIterator.html\" title=\"trait polars_core::utils::FromTrustedLenIterator\">FromTrustedLenIterator</a>&lt;T&gt; for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_iter_trusted_length\" class=\"method trait-impl\"><a href=\"#method.from_iter_trusted_length\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/utils/trait.FromTrustedLenIterator.html#tymethod.from_iter_trusted_length\" class=\"fn\">from_iter_trusted_length</a>&lt;I&gt;(iter: I) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,\n    &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>: TrustedLen,</span></h4></section></div></details>","FromTrustedLenIterator<T>","polars_core::prelude::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"polars_core/utils/trait.FromTrustedLenIterator.html\" title=\"trait polars_core::utils::FromTrustedLenIterator\">FromTrustedLenIterator</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt; for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.from_iter_trusted_length\" class=\"method trait-impl\"><a href=\"#method.from_iter_trusted_length\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/utils/trait.FromTrustedLenIterator.html#tymethod.from_iter_trusted_length\" class=\"fn\">from_iter_trusted_length</a>&lt;I&gt;(iter: I) -&gt; PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;,\n    &lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>: TrustedLen,</span></h4></section></div></details>","FromTrustedLenIterator<Option<T>>","polars_core::prelude::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TotalOrdKernel-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a href=\"#impl-TotalOrdKernel-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; TotalOrdKernel for PrimitiveArray&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: NativeType + NotSimdPrimitive + <a class=\"trait\" href=\"polars_utils/total_ord/trait.TotalOrd.html\" title=\"trait polars_utils::total_ord::TotalOrd\">TotalOrd</a>,</span></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.Scalar\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Scalar\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Scalar</a> = T</h4></section><section id=\"method.tot_lt_kernel\" class=\"method trait-impl\"><a href=\"#method.tot_lt_kernel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_lt_kernel</a>(&amp;self, other: &amp;PrimitiveArray&lt;T&gt;) -&gt; Bitmap</h4></section><section id=\"method.tot_le_kernel\" class=\"method trait-impl\"><a href=\"#method.tot_le_kernel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_le_kernel</a>(&amp;self, other: &amp;PrimitiveArray&lt;T&gt;) -&gt; Bitmap</h4></section><section id=\"method.tot_eq_kernel\" class=\"method trait-impl\"><a href=\"#method.tot_eq_kernel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_eq_kernel</a>(&amp;self, other: &amp;PrimitiveArray&lt;T&gt;) -&gt; Bitmap</h4></section><section id=\"method.tot_ne_kernel\" class=\"method trait-impl\"><a href=\"#method.tot_ne_kernel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_ne_kernel</a>(&amp;self, other: &amp;PrimitiveArray&lt;T&gt;) -&gt; Bitmap</h4></section><section id=\"method.tot_eq_kernel_broadcast\" class=\"method trait-impl\"><a href=\"#method.tot_eq_kernel_broadcast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_eq_kernel_broadcast</a>(\n    &amp;self,\n    other: &amp;&lt;PrimitiveArray&lt;T&gt; as TotalOrdKernel&gt;::Scalar\n) -&gt; Bitmap</h4></section><section id=\"method.tot_ne_kernel_broadcast\" class=\"method trait-impl\"><a href=\"#method.tot_ne_kernel_broadcast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_ne_kernel_broadcast</a>(\n    &amp;self,\n    other: &amp;&lt;PrimitiveArray&lt;T&gt; as TotalOrdKernel&gt;::Scalar\n) -&gt; Bitmap</h4></section><section id=\"method.tot_lt_kernel_broadcast\" class=\"method trait-impl\"><a href=\"#method.tot_lt_kernel_broadcast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_lt_kernel_broadcast</a>(\n    &amp;self,\n    other: &amp;&lt;PrimitiveArray&lt;T&gt; as TotalOrdKernel&gt;::Scalar\n) -&gt; Bitmap</h4></section><section id=\"method.tot_le_kernel_broadcast\" class=\"method trait-impl\"><a href=\"#method.tot_le_kernel_broadcast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_le_kernel_broadcast</a>(\n    &amp;self,\n    other: &amp;&lt;PrimitiveArray&lt;T&gt; as TotalOrdKernel&gt;::Scalar\n) -&gt; Bitmap</h4></section><section id=\"method.tot_gt_kernel_broadcast\" class=\"method trait-impl\"><a href=\"#method.tot_gt_kernel_broadcast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_gt_kernel_broadcast</a>(\n    &amp;self,\n    other: &amp;&lt;PrimitiveArray&lt;T&gt; as TotalOrdKernel&gt;::Scalar\n) -&gt; Bitmap</h4></section><section id=\"method.tot_ge_kernel_broadcast\" class=\"method trait-impl\"><a href=\"#method.tot_ge_kernel_broadcast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_ge_kernel_broadcast</a>(\n    &amp;self,\n    other: &amp;&lt;PrimitiveArray&lt;T&gt; as TotalOrdKernel&gt;::Scalar\n) -&gt; Bitmap</h4></section><section id=\"method.tot_gt_kernel\" class=\"method trait-impl\"><a href=\"#method.tot_gt_kernel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_gt_kernel</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>) -&gt; Bitmap</h4></section><section id=\"method.tot_ge_kernel\" class=\"method trait-impl\"><a href=\"#method.tot_ge_kernel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_ge_kernel</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>) -&gt; Bitmap</h4></section><section id=\"method.tot_eq_missing_kernel\" class=\"method trait-impl\"><a href=\"#method.tot_eq_missing_kernel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_eq_missing_kernel</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>) -&gt; Bitmap</h4></section><section id=\"method.tot_ne_missing_kernel\" class=\"method trait-impl\"><a href=\"#method.tot_ne_missing_kernel\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_ne_missing_kernel</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>) -&gt; Bitmap</h4></section><section id=\"method.tot_eq_missing_kernel_broadcast\" class=\"method trait-impl\"><a href=\"#method.tot_eq_missing_kernel_broadcast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_eq_missing_kernel_broadcast</a>(&amp;self, other: &amp;Self::Scalar) -&gt; Bitmap</h4></section><section id=\"method.tot_ne_missing_kernel_broadcast\" class=\"method trait-impl\"><a href=\"#method.tot_ne_missing_kernel_broadcast\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">tot_ne_missing_kernel_broadcast</a>(&amp;self, other: &amp;Self::Scalar) -&gt; Bitmap</h4></section></div></details>","TotalOrdKernel","polars_core::prelude::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ArrayFromIter%3CT%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array_collect.rs.html#300-330\">source</a><a href=\"#impl-ArrayFromIter%3CT%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_core/datatypes/trait.NumericNative.html\" title=\"trait polars_core::datatypes::NumericNative\">NumericNative</a>&gt; <a class=\"trait\" href=\"polars_core/datatypes/trait.ArrayFromIter.html\" title=\"trait polars_core::datatypes::ArrayFromIter\">ArrayFromIter</a>&lt;T&gt; for PrimitiveArray&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.arr_from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array_collect.rs.html#302-304\">source</a><a href=\"#method.arr_from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/datatypes/trait.ArrayFromIter.html#tymethod.arr_from_iter\" class=\"fn\">arr_from_iter</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;&gt;(iter: I) -&gt; Self</h4></section><section id=\"method.arr_from_iter_trusted\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array_collect.rs.html#307-313\">source</a><a href=\"#method.arr_from_iter_trusted\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/datatypes/trait.ArrayFromIter.html#method.arr_from_iter_trusted\" class=\"fn\">arr_from_iter_trusted</a>&lt;I&gt;(iter: I) -&gt; Self<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,\n    I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>: TrustedLen,</span></h4></section><section id=\"method.try_arr_from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array_collect.rs.html#316-319\">source</a><a href=\"#method.try_arr_from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/datatypes/trait.ArrayFromIter.html#tymethod.try_arr_from_iter\" class=\"fn\">try_arr_from_iter</a>&lt;E, I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, E&gt;&gt;&gt;(\n    iter: I\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, E&gt;</h4></section><section id=\"method.try_arr_from_iter_trusted\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array_collect.rs.html#322-329\">source</a><a href=\"#method.try_arr_from_iter_trusted\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/datatypes/trait.ArrayFromIter.html#method.try_arr_from_iter_trusted\" class=\"fn\">try_arr_from_iter_trusted</a>&lt;E, I&gt;(iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, E&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, E&gt;&gt;,\n    I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>: TrustedLen,</span></h4></section></div></details>","ArrayFromIter<T>","polars_core::prelude::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StaticArray-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#85-119\">source</a><a href=\"#impl-StaticArray-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_core/datatypes/trait.NumericNative.html\" title=\"trait polars_core::datatypes::NumericNative\">NumericNative</a>&gt; <a class=\"trait\" href=\"polars_core/datatypes/trait.StaticArray.html\" title=\"trait polars_core::datatypes::StaticArray\">StaticArray</a> for PrimitiveArray&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.ValueT\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ValueT\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"polars_core/datatypes/trait.StaticArray.html#associatedtype.ValueT\" class=\"associatedtype\">ValueT</a>&lt;'a&gt; = T</h4></section><section id=\"associatedtype.ZeroableValueT\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ZeroableValueT\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"polars_core/datatypes/trait.StaticArray.html#associatedtype.ZeroableValueT\" class=\"associatedtype\">ZeroableValueT</a>&lt;'a&gt; = T</h4></section><section id=\"associatedtype.ValueIterT\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ValueIterT\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"polars_core/datatypes/trait.StaticArray.html#associatedtype.ValueIterT\" class=\"associatedtype\">ValueIterT</a>&lt;'a&gt; = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/iter/adapters/copied/struct.Copied.html\" title=\"struct core::iter::adapters::copied::Copied\">Copied</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'a, T&gt;&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.value_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#91-93\">source</a><a href=\"#method.value_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"polars_core/datatypes/trait.StaticArray.html#tymethod.value_unchecked\" class=\"fn\">value_unchecked</a>(&amp;self, idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Self::<a class=\"associatedtype\" href=\"polars_core/datatypes/trait.StaticArray.html#associatedtype.ValueT\" title=\"type polars_core::datatypes::StaticArray::ValueT\">ValueT</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Safety <a href=\"polars_core/datatypes/trait.StaticArray.html#tymethod.value_unchecked\">Read more</a></div></details><section id=\"method.values_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#95-97\">source</a><a href=\"#method.values_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/datatypes/trait.StaticArray.html#tymethod.values_iter\" class=\"fn\">values_iter</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"polars_core/datatypes/trait.StaticArray.html#associatedtype.ValueIterT\" title=\"type polars_core::datatypes::StaticArray::ValueIterT\">ValueIterT</a>&lt;'_&gt;</h4></section><section id=\"method.as_slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#100-102\">source</a><a href=\"#method.as_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/datatypes/trait.StaticArray.html#method.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;[Self::<a class=\"associatedtype\" href=\"polars_core/datatypes/trait.StaticArray.html#associatedtype.ValueT\" title=\"type polars_core::datatypes::StaticArray::ValueT\">ValueT</a>&lt;'_&gt;]&gt;</h4></section><section id=\"method.iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#104-106\">source</a><a href=\"#method.iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/datatypes/trait.StaticArray.html#tymethod.iter\" class=\"fn\">iter</a>(\n    &amp;self\n) -&gt; ZipValidity&lt;Self::<a class=\"associatedtype\" href=\"polars_core/datatypes/trait.StaticArray.html#associatedtype.ValueT\" title=\"type polars_core::datatypes::StaticArray::ValueT\">ValueT</a>&lt;'_&gt;, Self::<a class=\"associatedtype\" href=\"polars_core/datatypes/trait.StaticArray.html#associatedtype.ValueIterT\" title=\"type polars_core::datatypes::StaticArray::ValueIterT\">ValueIterT</a>&lt;'_&gt;, BitmapIter&lt;'_&gt;&gt;</h4></section><section id=\"method.with_validity_typed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#108-110\">source</a><a href=\"#method.with_validity_typed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/datatypes/trait.StaticArray.html#tymethod.with_validity_typed\" class=\"fn\">with_validity_typed</a>(self, validity: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Bitmap&gt;) -&gt; Self</h4></section><section id=\"method.from_vec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#112-114\">source</a><a href=\"#method.from_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/datatypes/trait.StaticArray.html#method.from_vec\" class=\"fn\">from_vec</a>(v: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Self::<a class=\"associatedtype\" href=\"polars_core/datatypes/trait.StaticArray.html#associatedtype.ValueT\" title=\"type polars_core::datatypes::StaticArray::ValueT\">ValueT</a>&lt;'_&gt;&gt;, _dtype: <a class=\"enum\" href=\"polars_core/datatypes/enum.DataType.html\" title=\"enum polars_core::datatypes::DataType\">DataType</a>) -&gt; Self</h4></section><section id=\"method.from_zeroable_vec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#116-118\">source</a><a href=\"#method.from_zeroable_vec\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/datatypes/trait.StaticArray.html#method.from_zeroable_vec\" class=\"fn\">from_zeroable_vec</a>(v: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Self::<a class=\"associatedtype\" href=\"polars_core/datatypes/trait.StaticArray.html#associatedtype.ZeroableValueT\" title=\"type polars_core::datatypes::StaticArray::ZeroableValueT\">ZeroableValueT</a>&lt;'_&gt;&gt;, _dtype: <a class=\"enum\" href=\"polars_core/datatypes/enum.DataType.html\" title=\"enum polars_core::datatypes::DataType\">DataType</a>) -&gt; Self</h4></section><section id=\"method.get\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#29-35\">source</a><a href=\"#method.get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/datatypes/trait.StaticArray.html#method.get\" class=\"fn\">get</a>(&amp;self, idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"polars_core/datatypes/trait.StaticArray.html#associatedtype.ValueT\" title=\"type polars_core::datatypes::StaticArray::ValueT\">ValueT</a>&lt;'_&gt;&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#40-46\">source</a><a href=\"#method.get_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"polars_core/datatypes/trait.StaticArray.html#method.get_unchecked\" class=\"fn\">get_unchecked</a>(&amp;self, idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"polars_core/datatypes/trait.StaticArray.html#associatedtype.ValueT\" title=\"type polars_core::datatypes::StaticArray::ValueT\">ValueT</a>&lt;'_&gt;&gt;</h4></section></summary><div class='docblock'>Safety <a href=\"polars_core/datatypes/trait.StaticArray.html#method.get_unchecked\">Read more</a></div></details><section id=\"method.last\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#49-51\">source</a><a href=\"#method.last\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/datatypes/trait.StaticArray.html#method.last\" class=\"fn\">last</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self::<a class=\"associatedtype\" href=\"polars_core/datatypes/trait.StaticArray.html#associatedtype.ValueT\" title=\"type polars_core::datatypes::StaticArray::ValueT\">ValueT</a>&lt;'_&gt;&gt;</h4></section><section id=\"method.value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array.rs.html#54-57\">source</a><a href=\"#method.value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/datatypes/trait.StaticArray.html#method.value\" class=\"fn\">value</a>(&amp;self, idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Self::<a class=\"associatedtype\" href=\"polars_core/datatypes/trait.StaticArray.html#associatedtype.ValueT\" title=\"type polars_core::datatypes::StaticArray::ValueT\">ValueT</a>&lt;'_&gt;</h4></section></div></details>","StaticArray","polars_core::prelude::IdxArr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ArrayFromIter%3COption%3CT%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array_collect.rs.html#332-370\">source</a><a href=\"#impl-ArrayFromIter%3COption%3CT%3E%3E-for-PrimitiveArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"polars_core/datatypes/trait.NumericNative.html\" title=\"trait polars_core::datatypes::NumericNative\">NumericNative</a>&gt; <a class=\"trait\" href=\"polars_core/datatypes/trait.ArrayFromIter.html\" title=\"trait polars_core::datatypes::ArrayFromIter\">ArrayFromIter</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt; for PrimitiveArray&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.arr_from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array_collect.rs.html#333-336\">source</a><a href=\"#method.arr_from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/datatypes/trait.ArrayFromIter.html#tymethod.arr_from_iter\" class=\"fn\">arr_from_iter</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;&gt;(iter: I) -&gt; Self</h4></section><section id=\"method.arr_from_iter_trusted\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array_collect.rs.html#338-345\">source</a><a href=\"#method.arr_from_iter_trusted\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/datatypes/trait.ArrayFromIter.html#method.arr_from_iter_trusted\" class=\"fn\">arr_from_iter_trusted</a>&lt;I&gt;(iter: I) -&gt; Self<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;&gt;,\n    I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>: TrustedLen,</span></h4></section><section id=\"method.try_arr_from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array_collect.rs.html#347-356\">source</a><a href=\"#method.try_arr_from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/datatypes/trait.ArrayFromIter.html#tymethod.try_arr_from_iter\" class=\"fn\">try_arr_from_iter</a>&lt;E, I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;, E&gt;&gt;&gt;(\n    iter: I\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, E&gt;</h4></section><section id=\"method.try_arr_from_iter_trusted\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/polars_core/datatypes/static_array_collect.rs.html#358-369\">source</a><a href=\"#method.try_arr_from_iter_trusted\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"polars_core/datatypes/trait.ArrayFromIter.html#method.try_arr_from_iter_trusted\" class=\"fn\">try_arr_from_iter_trusted</a>&lt;E, I&gt;(iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, E&gt;<span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;, E&gt;&gt;,\n    I::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a>: TrustedLen,</span></h4></section></div></details>","ArrayFromIter<Option<T>>","polars_core::prelude::IdxArr"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()